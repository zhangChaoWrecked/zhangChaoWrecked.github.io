<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Wrecked</title>
  
  <subtitle>Holding You Back As I Breath You In</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-06-04T08:37:09.905Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Wrecked</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>博客基本配置</title>
    <link href="http://yoursite.com/2019/06/04/%E5%8D%9A%E5%AE%A2%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2019/06/04/博客基本配置/</id>
    <published>2019-06-04T07:47:11.389Z</published>
    <updated>2019-06-04T08:37:09.905Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/zhangChaoWrecked/pictures/master/Background.jpg" alt=""></p><h2 id="环境初始化"><a href="#环境初始化" class="headerlink" title="环境初始化"></a>环境初始化</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g    //安装hexo modules</span><br><span class="line"></span><br><span class="line">mkdir WreckedBolg       //创建目录</span><br><span class="line"> </span><br><span class="line">cd WreckedBolg         //进入目录</span><br><span class="line"> </span><br><span class="line">hexo init             //初始化目录</span><br><span class="line"></span><br><span class="line">npm install hexo-deployer-git --save  安装部署gitHub依赖</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">git clone https://github.com/theme-next/hexo-theme-next themes/next  //主题文件地址</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">npm install hexo-generator-searchdb --save     //搜素引擎依赖包</span><br><span class="line"> </span><br><span class="line">npm install hexo-related-popular-posts --save  //相关文章包</span><br></pre></td></tr></table></figure><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server      //生成本地Service http://localhost:4000/ 访问地址  hexo s 简写</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate   //生成静态HTML  hexo g 简写</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy   //部署到GitHub   hexo d 简写</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><h3 id="配置文件-config-yml"><a href="#配置文件-config-yml" class="headerlink" title="配置文件 _config.yml"></a>配置文件 _config.yml</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/***/***.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">hexo g #完整命令为hexo generate,用于生成静态文件</span><br><span class="line"></span><br><span class="line">hexo s #完整命令为hexo server,用于启动服务器，主要用来本地预览</span><br><span class="line"></span><br><span class="line">hexo d #完整命令为hexo deploy,用于将本地文件发布到github等git仓库上</span><br><span class="line"></span><br><span class="line">hexo n “my article” #完整命令为hexo new,用于新建一篇名为“my article”的文章</span><br><span class="line"></span><br><span class="line">hexo n “我的第一篇文章”</span><br><span class="line"></span><br><span class="line">hexo list  page / post / route / tag / category(参数) 查看博客对应信息</span><br></pre></td></tr></table></figure><h3 id="背景图设置"><a href="#背景图设置" class="headerlink" title="背景图设置"></a>背景图设置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">..\themes\next\layout\_layout.swig 目录 找到&lt;Body&gt;标签 设置背景图片 </span><br><span class="line"></span><br><span class="line">style=&quot;background: url(https://raw.githubusercontent.com/zhangChaoWrecked/pictures/master/Background.jpg) no-repeat fixed ;&quot;</span><br></pre></td></tr></table></figure><p><a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">点击跳转配置教程链接</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://raw.githubusercontent.com/zhangChaoWrecked/pictures/master/Background.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;环境初始化&quot;&gt;&lt;a href=&quot;#环境初始化&quot; 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>并发编程-volatile</title>
    <link href="http://yoursite.com/2019/02/22/%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B-volatile/"/>
    <id>http://yoursite.com/2019/02/22/并发编程-volatile/</id>
    <published>2019-02-22T03:58:33.000Z</published>
    <updated>2019-02-22T04:08:12.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="上下文切换"><a href="#上下文切换" class="headerlink" title="上下文切换"></a>上下文切换</h3><p>  阐述：CPU通过时间片分配算法来循环执行任务，当前任务执行一个时间片后会切换到下一个<br>任务。但是，在切换前会保存上一个任务的状态，以便下次切换回这个任务时，可以再加载这<br>个任务的状态。所以任务从保存到再加载的过程就是一次上下文切换</p><table><thead><tr><th>如何减少上下文切换</th><th>方案</th></tr></thead><tbody><tr><td>无锁并发编程</td><td>将数据的ID按照Hash算法取模分段，不同的线程处理不同段的数据</td></tr><tr><td>CAS算法</td><td>Java的Atomic包使用CAS算法来更新数据，而不需要加锁</td></tr><tr><td>使用最少线程</td><td>避免创建不需要的线程</td></tr></tbody></table><h3 id="volatile"><a href="#volatile" class="headerlink" title="volatile"></a>volatile</h3><table><thead><tr><th>描述</th><th>特点</th></tr></thead><tbody><tr><td>1.使用volatile关键字会强制将修改的值立即写入主存</td><td>1.保证有序性、可见性</td></tr><tr><td>2.导致其他线程的工作内存中缓存变量的缓存行无效</td><td>2.不保证原子性</td></tr></tbody></table><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">应用场景：状态标志</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;上下文切换&quot;&gt;&lt;a href=&quot;#上下文切换&quot; class=&quot;headerlink&quot; title=&quot;上下文切换&quot;&gt;&lt;/a&gt;上下文切换&lt;/h3&gt;&lt;p&gt;  阐述：CPU通过时间片分配算法来循环执行任务，当前任务执行一个时间片后会切换到下一个&lt;br&gt;任务。但是，在切换前
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>RabbitMQ安装</title>
    <link href="http://yoursite.com/2019/01/19/RabbitMQ%E5%AE%89%E8%A3%85/"/>
    <id>http://yoursite.com/2019/01/19/RabbitMQ安装/</id>
    <published>2019-01-19T03:49:08.000Z</published>
    <updated>2019-02-22T04:08:12.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="erlang下载"><a href="#erlang下载" class="headerlink" title="erlang下载"></a><a href="https://www.erlang.org/downloads/" target="_blank" rel="noopener">erlang下载</a></h5><p><img src="https://raw.githubusercontent.com/zhangChaoWrecked/pictures/master/erlang.png" alt="erlang客户端"></p><h5 id="rabbit下载"><a href="#rabbit下载" class="headerlink" title="rabbit下载"></a><a href="http://www.rabbitmq.com/install-windows.html#install" target="_blank" rel="noopener">rabbit下载</a></h5><p><img src="https://raw.githubusercontent.com/zhangChaoWrecked/pictures/master/rabbitmq.png" alt="rabbit客户端"></p><h5 id="cmd命令行"><a href="#cmd命令行" class="headerlink" title="cmd命令行"></a><a href="#">cmd命令行</a></h5><p><img src="https://raw.githubusercontent.com/zhangChaoWrecked/pictures/master/RabbitCmd.png" alt="cmd界面"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&quot;E:\rabbitMq\rabbitmq_server-3.7.10\sbin\rabbitmq-plugins.bat&quot;  enable rabbitmq_management  开启web管理接口</span><br><span class="line"> </span><br><span class="line">net stop RabbitMQ &amp;&amp; net start RabbitMQ 重启rabbitMQ</span><br><span class="line"></span><br><span class="line">rabbitmqctl.bat list_users 列出当前用户列表</span><br></pre></td></tr></table></figure></p><table><thead><tr><th>账号</th><th>密码</th></tr></thead><tbody><tr><td>guest(默认)</td><td>guest(默认)</td></tr></tbody></table><h5 id="本地浏览器打开"><a href="#本地浏览器打开" class="headerlink" title="本地浏览器打开"></a><a href="http://localhost:15672" target="_blank" rel="noopener">本地浏览器打开</a></h5><p><img src="https://raw.githubusercontent.com/zhangChaoWrecked/pictures/master/LocalRabbit.png" alt="本地打开"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;erlang下载&quot;&gt;&lt;a href=&quot;#erlang下载&quot; class=&quot;headerlink&quot; title=&quot;erlang下载&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.erlang.org/downloads/&quot; target=&quot;_blank&quot; re
      
    
    </summary>
    
      <category term="MQ" scheme="http://yoursite.com/categories/MQ/"/>
    
    
      <category term="rabbitmq" scheme="http://yoursite.com/tags/rabbitmq/"/>
    
  </entry>
  
  <entry>
    <title>Java DES(对称加密)</title>
    <link href="http://yoursite.com/2019/01/16/Java%20Crypto(%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86)/"/>
    <id>http://yoursite.com/2019/01/16/Java Crypto(对称加密)/</id>
    <published>2019-01-16T09:39:31.000Z</published>
    <updated>2019-02-22T04:08:12.000Z</updated>
    
    <content type="html"><![CDATA[<h5 id="简单一种对称加密与解密"><a href="#简单一种对称加密与解密" class="headerlink" title="简单一种对称加密与解密"></a>简单一种对称加密与解密</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.crypto.Cipher;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.KeyGenerator;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.SecretKey;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.SecretKeySpec;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DESUtils</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 生成密钥</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> byte[] initKey() throws Exception &#123;</span><br><span class="line">        KeyGenerator keyGen = KeyGenerator.getInstance(<span class="string">"DES"</span>);</span><br><span class="line">        keyGen.init(<span class="number">56</span>);</span><br><span class="line">        SecretKey secretKey = keyGen.generateKey();</span><br><span class="line">        <span class="keyword">return</span> secretKey.getEncoded();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * DES 加密</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encrypt</span><span class="params">(byte[] data, byte[] key)</span> throws Exception </span>&#123;</span><br><span class="line">        SecretKey secretKey = <span class="keyword">new</span> SecretKeySpec(key, <span class="string">"DES"</span>);</span><br><span class="line"></span><br><span class="line">        Cipher cipher = Cipher.getInstance(<span class="string">"DES"</span>);</span><br><span class="line">        cipher.init(Cipher.ENCRYPT_MODE, secretKey);</span><br><span class="line">        byte[] cipherBytes = cipher.doFinal(data);</span><br><span class="line">        String result = byte2Hex(cipherBytes);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * DES 解密</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decrypt</span><span class="params">(byte[] data, byte[] key)</span> throws Exception </span>&#123;</span><br><span class="line">        SecretKey secretKey = <span class="keyword">new</span> SecretKeySpec(key, <span class="string">"DES"</span>);</span><br><span class="line">        Cipher cipher = Cipher.getInstance(<span class="string">"DES"</span>);</span><br><span class="line">        cipher.init(Cipher.DECRYPT_MODE, secretKey);</span><br><span class="line">        byte[] plainBytes = cipher.doFinal(data);</span><br><span class="line">        String result = <span class="keyword">new</span> String(plainBytes);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">toByte</span><span class="params">(<span class="keyword">char</span> c)</span> </span>&#123;</span><br><span class="line">        byte b = (byte) <span class="string">"0123456789ABCDEF"</span>.indexOf(c);</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> byte[] hexToByte(String hex) &#123;</span><br><span class="line">        <span class="keyword">int</span> len = (hex.length() / <span class="number">2</span>);</span><br><span class="line">        byte[] result = <span class="keyword">new</span> byte[len];</span><br><span class="line">        <span class="keyword">char</span>[] achar = hex.toCharArray();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> pos = i * <span class="number">2</span>;</span><br><span class="line">            result[i] = (byte) (toByte(achar[pos]) &lt;&lt; <span class="number">4</span> | toByte(achar[pos + <span class="number">1</span>]));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">byte2Hex</span><span class="params">(byte[] b)</span> </span>&#123;</span><br><span class="line">        String stmp = <span class="string">""</span>;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder(<span class="string">""</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> n = <span class="number">0</span>; n &lt; b.length; n++) &#123;</span><br><span class="line">            stmp = Integer.toHexString(b[n] &amp; <span class="number">0xFF</span>);</span><br><span class="line">            sb.append((stmp.length() == <span class="number">1</span>) ? <span class="string">"0"</span> + stmp : stmp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString().toUpperCase().trim();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//加密</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encryptStr</span><span class="params">(String str, String secreytKey)</span> throws Exception </span>&#123;</span><br><span class="line">        String enResult = encrypt(str.getBytes(), hexToByte(secreytKey));</span><br><span class="line">        <span class="keyword">return</span> enResult;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//解密</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decryptStr</span><span class="params">(String str, String secreytKey)</span> throws Exception </span>&#123;</span><br><span class="line">        String deResult = decrypt(hexToByte(str), hexToByte(secreytKey));</span><br><span class="line">        <span class="keyword">return</span> deResult;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/***</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">        秘钥769bfbae9d20100d</span></span><br><span class="line"><span class="comment">        加密结果e3f6b60180661bb0d541de00260afb10</span></span><br><span class="line"><span class="comment">        解密结果hello_world</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param args</span></span><br><span class="line"><span class="comment">     * @throws Exception</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> throws Exception </span>&#123;</span><br><span class="line">        <span class="comment">//生成秘钥</span></span><br><span class="line">        byte[] desKey = initKey();</span><br><span class="line">        String secreytKey = byte2Hex(desKey);</span><br><span class="line">        System.out.println(<span class="string">"秘钥"</span> + secreytKey.toLowerCase());</span><br><span class="line">        <span class="comment">//加密</span></span><br><span class="line">        String hello_world = encryptStr(<span class="string">"hello_world"</span>, secreytKey);</span><br><span class="line">        System.out.println(<span class="string">"加密结果"</span> + hello_world.toLowerCase());</span><br><span class="line">        <span class="comment">//解密</span></span><br><span class="line">        String  deResult = decryptStr(hello_world, secreytKey);</span><br><span class="line">        System.out.println(<span class="string">"解密结果"</span> + deResult);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h5 id=&quot;简单一种对称加密与解密&quot;&gt;&lt;a href=&quot;#简单一种对称加密与解密&quot; class=&quot;headerlink&quot; title=&quot;简单一种对称加密与解密&quot;&gt;&lt;/a&gt;简单一种对称加密与解密&lt;/h5&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;t
      
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="Crypto" scheme="http://yoursite.com/tags/Crypto/"/>
    
  </entry>
  
  <entry>
    <title>ThreadLocal</title>
    <link href="http://yoursite.com/2018/12/04/ThreadLocal/"/>
    <id>http://yoursite.com/2018/12/04/ThreadLocal/</id>
    <published>2018-12-04T08:49:42.000Z</published>
    <updated>2019-02-22T04:08:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ThreadLocal-类结构图"><a href="#ThreadLocal-类结构图" class="headerlink" title="ThreadLocal 类结构图"></a>ThreadLocal 类结构图</h2><p><img src="https://raw.githubusercontent.com/zhangChaoWrecked/pictures/master/ThreadLocal2.png" alt="image"></p><h3 id="get"><a href="#get" class="headerlink" title="get"></a>get</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> T <span class="title">get</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Thread t = Thread.currentThread();</span><br><span class="line">        ThreadLocalMap <span class="built_in">map</span> = getMap(t);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">map</span> != null) &#123;</span><br><span class="line">            ThreadLocalMap.Entry e = <span class="built_in">map</span>.getEntry(<span class="keyword">this</span>);</span><br><span class="line">            <span class="keyword">if</span> (e != null) &#123;</span><br><span class="line">                @SuppressWarnings(<span class="string">"unchecked"</span>)</span><br><span class="line">                T result = (T)e.value;</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> setInitialValue();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="set"><a href="#set" class="headerlink" title="set"></a>set</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(T value)</span> </span>&#123;</span><br><span class="line">      Thread t = Thread.currentThread();</span><br><span class="line">      ThreadLocalMap <span class="built_in">map</span> = getMap(t);</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">map</span> != null)</span><br><span class="line">          <span class="built_in">map</span>.<span class="built_in">set</span>(<span class="keyword">this</span>, value);</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">          createMap(t, value);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h3 id="remove"><a href="#remove" class="headerlink" title="remove"></a>remove</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ThreadLocalMap m = getMap(Thread.currentThread());</span><br><span class="line">    <span class="keyword">if</span> (m != null)</span><br><span class="line">        m.remove(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="setInitialValue"><a href="#setInitialValue" class="headerlink" title="setInitialValue"></a>setInitialValue</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> T <span class="title">setInitialValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       T value = initialValue();</span><br><span class="line">       Thread t = Thread.currentThread();</span><br><span class="line">       ThreadLocalMap <span class="built_in">map</span> = getMap(t);</span><br><span class="line">       <span class="keyword">if</span> (<span class="built_in">map</span> != null)</span><br><span class="line">           <span class="built_in">map</span>.<span class="built_in">set</span>(<span class="keyword">this</span>, value);</span><br><span class="line">       <span class="keyword">else</span></span><br><span class="line">           createMap(t, value);</span><br><span class="line">       <span class="keyword">return</span> value;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="initialValue"><a href="#initialValue" class="headerlink" title="initialValue"></a>initialValue</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> T <span class="title">initialValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> null;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="getMap"><a href="#getMap" class="headerlink" title="getMap"></a>getMap</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ThreadLocalMap <span class="title">getMap</span><span class="params">(Thread t)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> t.threadLocals;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="createMap"><a href="#createMap" class="headerlink" title="createMap"></a>createMap</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createMap</span><span class="params">(Thread t, T firstValue)</span> </span>&#123;</span><br><span class="line">      t.threadLocals = <span class="keyword">new</span> ThreadLocalMap(<span class="keyword">this</span>, firstValue);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ThreadLocal-类结构图&quot;&gt;&lt;a href=&quot;#ThreadLocal-类结构图&quot; class=&quot;headerlink&quot; title=&quot;ThreadLocal 类结构图&quot;&gt;&lt;/a&gt;ThreadLocal 类结构图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http
      
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="ThreadLocal" scheme="http://yoursite.com/tags/ThreadLocal/"/>
    
  </entry>
  
  <entry>
    <title>Interview knowledge</title>
    <link href="http://yoursite.com/2018/12/03/Interview-knowledge/"/>
    <id>http://yoursite.com/2018/12/03/Interview-knowledge/</id>
    <published>2018-12-03T08:17:20.000Z</published>
    <updated>2019-02-22T04:08:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java多线程"><a href="#Java多线程" class="headerlink" title="Java多线程"></a>Java多线程</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">线程池的原理，为什么要创建线程池？创建线程池的方式；</span><br><span class="line"></span><br><span class="line">线程的生命周期，什么时候会出现僵死进程；</span><br><span class="line"></span><br><span class="line">说说线程安全问题，什么实现线程安全，如何实现线程安全；</span><br><span class="line"></span><br><span class="line">创建线程池有哪几个核心参数？ 如何合理配置线程池的大小？</span><br><span class="line"></span><br><span class="line">volatile、ThreadLocal的使用场景和原理；</span><br><span class="line"></span><br><span class="line">ThreadLocal什么时候会出现OOM的情况？为什么？</span><br><span class="line"></span><br><span class="line">synchronized、volatile区别、synchronized锁粒度、模拟死锁场景、原子性与可见性；</span><br></pre></td></tr></table></figure><h2 id="JVM相关"><a href="#JVM相关" class="headerlink" title="JVM相关"></a>JVM相关</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">JVM内存模型，GC机制和原理；</span><br><span class="line"></span><br><span class="line">GC分哪两种，Minor GC 和Full GC有什么区别？什么时候会触发Full GC？分别采用什么算法？</span><br><span class="line"></span><br><span class="line">JVM里的有几种classloader，为什么会有多种？</span><br><span class="line"></span><br><span class="line">什么是双亲委派机制？介绍一些运作过程，双亲委派模型的好处；</span><br><span class="line"></span><br><span class="line">什么情况下我们需要破坏双亲委派模型；</span><br><span class="line"></span><br><span class="line">常见的JVM调优方法有哪些？可以具体到调整哪个参数，调成什么值？</span><br><span class="line"></span><br><span class="line">JVM虚拟机内存划分、类加载器、垃圾收集算法、垃圾收集器、class文件结构是如何解析的；</span><br></pre></td></tr></table></figure><h2 id="Java扩展篇"><a href="#Java扩展篇" class="headerlink" title="Java扩展篇"></a>Java扩展篇</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">红黑树的实现原理和应用场景；</span><br><span class="line"></span><br><span class="line">NIO是什么？适用于何种场景？</span><br><span class="line"></span><br><span class="line">Java9比Java8改进了什么；</span><br><span class="line"></span><br><span class="line">HashMap内部的数据结构是什么？底层是怎么实现的？（还可能会延伸考察ConcurrentHashMap与HashMap、HashTable等，考察对技术细节的深入了解程度）；</span><br><span class="line"></span><br><span class="line">说说反射的用途及实现，反射是不是很慢，我们在项目中是否要避免使用反射；</span><br><span class="line"></span><br><span class="line">说说自定义注解的场景及实现；</span><br><span class="line"></span><br><span class="line">List 和 Map 区别，Arraylist 与 LinkedList 区别，ArrayList 与 Vector 区别；</span><br></pre></td></tr></table></figure><h2 id="Spring相关"><a href="#Spring相关" class="headerlink" title="Spring相关"></a>Spring相关</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Spring AOP的实现原理和场景？</span><br><span class="line"></span><br><span class="line">Spring bean的作用域和生命周期；</span><br><span class="line"></span><br><span class="line">Spring Boot比Spring做了哪些改进？ Spring 5比Spring4做了哪些改进；</span><br><span class="line"></span><br><span class="line">如何自定义一个Spring Boot Starter？</span><br><span class="line"></span><br><span class="line">Spring IOC是什么？优点是什么？</span><br><span class="line"></span><br><span class="line">SpringMVC、动态代理、反射、AOP原理、事务隔离级别；</span><br></pre></td></tr></table></figure><h2 id="中间件篇"><a href="#中间件篇" class="headerlink" title="中间件篇"></a>中间件篇</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Dubbo完整的一次调用链路介绍；</span><br><span class="line"></span><br><span class="line">Dubbo支持几种负载均衡策略？</span><br><span class="line"></span><br><span class="line">Dubbo Provider服务提供者要控制执行并发请求上限，具体怎么做？</span><br><span class="line"></span><br><span class="line">Dubbo启动的时候支持几种配置方式？</span><br><span class="line"></span><br><span class="line">了解几种消息中间件产品？各产品的优缺点介绍；</span><br><span class="line"></span><br><span class="line">消息中间件如何保证消息的一致性和如何进行消息的重试机制？</span><br><span class="line"></span><br><span class="line">Spring Cloud熔断机制介绍；</span><br><span class="line"></span><br><span class="line">Spring Cloud对比下Dubbo，什么场景下该使用Spring Cloud？</span><br></pre></td></tr></table></figure><h2 id="数据库篇"><a href="#数据库篇" class="headerlink" title="数据库篇"></a>数据库篇</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">锁机制介绍：行锁、表锁、排他锁、共享锁；</span><br><span class="line"></span><br><span class="line">乐观锁的业务场景及实现方式；</span><br><span class="line"></span><br><span class="line">事务介绍，分布式事物的理解，常见的解决方案有哪些，什么事两阶段提交、三阶段提交；</span><br><span class="line"></span><br><span class="line">MySQL记录binlog的方式主要包括三种模式？每种模式的优缺点是什么？</span><br><span class="line"></span><br><span class="line">MySQL锁，悲观锁、乐观锁、排它锁、共享锁、表级锁、行级锁；</span><br><span class="line"></span><br><span class="line">分布式事务的原理2阶段提交，同步\异步\阻塞\非阻塞；</span><br><span class="line"></span><br><span class="line">数据库事务隔离级别，MySQL默认的隔离级别、Spring如何实现事务、</span><br><span class="line"></span><br><span class="line">JDBC如何实现事务、嵌套事务实现、分布式事务实现；</span><br><span class="line"></span><br><span class="line">SQL的整个解析、执行过程原理、SQL行转列；</span><br></pre></td></tr></table></figure><h2 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">Redis为什么这么快？redis采用多线程会有哪些问题？</span><br><span class="line"></span><br><span class="line">Redis支持哪几种数据结构；</span><br><span class="line"></span><br><span class="line">Redis跳跃表的问题；</span><br><span class="line"></span><br><span class="line">Redis单进程单线程的Redis如何能够高并发?</span><br><span class="line"></span><br><span class="line">Redis如何使用Redis实现分布式锁？</span><br><span class="line"></span><br><span class="line">Redis分布式锁操作的原子性，Redis内部是如何实现的？</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">看过哪些源代码？然后会根据你说的源码问一些细节的问题</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Java多线程&quot;&gt;&lt;a href=&quot;#Java多线程&quot; class=&quot;headerlink&quot; title=&quot;Java多线程&quot;&gt;&lt;/a&gt;Java多线程&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
      <category term="知识点" scheme="http://yoursite.com/categories/%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    
    
      <category term="面试" scheme="http://yoursite.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="Redis" scheme="http://yoursite.com/tags/Redis/"/>
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="中间件" scheme="http://yoursite.com/tags/%E4%B8%AD%E9%97%B4%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Linux Top命令</title>
    <link href="http://yoursite.com/2018/11/30/Linux%20Top%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/11/30/Linux Top命令/</id>
    <published>2018-11-30T09:39:31.000Z</published>
    <updated>2019-06-04T08:37:09.879Z</updated>
    
    <content type="html"><![CDATA[<h3 id="uptime-top"><a href="#uptime-top" class="headerlink" title="uptime / top"></a>uptime / top</h3><p><img src="https://raw.githubusercontent.com/zhangChaoWrecked/pictures/master/top.png" alt="image"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">16:36:50 up 108 days,  7:24,  2 users,  load average: 61.27, 61.50, 61.60</span><br></pre></td></tr></table></figure></p><table><thead><tr><th>Field</th><th>Desc</th></tr></thead><tbody><tr><td>16:36:50</td><td>时间</td></tr><tr><td>up 1:22</td><td>系统运行时间</td></tr><tr><td>users</td><td>当前登录用户数</td></tr><tr><td>load average</td><td>三个数值分别为  1分钟、5分钟、15分钟前到现在的平均负载</td></tr></tbody></table><h2 id="英文文档链接-Understanding-Load-Averages"><a href="#英文文档链接-Understanding-Load-Averages" class="headerlink" title="英文文档链接 Understanding-Load-Averages"></a>英文文档链接 <a href="http://blog.scoutapp.com/articles/2009/07/31/understanding-load-averages" target="_blank" rel="noopener">Understanding-Load-Averages</a></h2><h2 id="中文文档链接-Understanding-Load-Averages"><a href="#中文文档链接-Understanding-Load-Averages" class="headerlink" title="中文文档链接 Understanding-Load-Averages"></a>中文文档链接 <a href="http://www.ruanyifeng.com/blog/2011/07/linux_load_average_explained.html" target="_blank" rel="noopener">Understanding-Load-Averages</a></h2><h3 id="Tasks"><a href="#Tasks" class="headerlink" title="Tasks"></a>Tasks</h3><table><thead><tr><th>key</th><th>value</th><th>Desc</th></tr></thead><tbody><tr><td>29</td><td>total</td><td>进程总数</td></tr><tr><td>1</td><td>running</td><td>正在运行的进程数</td></tr><tr><td>28</td><td>sleeping</td><td>睡眠的进程数</td></tr><tr><td>0</td><td>stopped</td><td>停止的进程数</td></tr><tr><td>0</td><td>zombie</td><td>僵尸进程数</td></tr></tbody></table><h3 id="Cpu-s"><a href="#Cpu-s" class="headerlink" title="Cpu(s)"></a>Cpu(s)</h3><table><thead><tr><th>key</th><th>value</th><th>Desc</th></tr></thead><tbody><tr><td>0.3%</td><td>us</td><td>用户空间占用CPU百分比</td></tr><tr><td>1.0%</td><td>sy</td><td>内核空间占用CPU百分比</td></tr><tr><td>0.0%</td><td>ni</td><td>用户进程空间内改变过优先级的进程占用CPU百分比</td></tr><tr><td>98.7%</td><td>id</td><td>空闲CPU百分比</td></tr><tr><td>0.0%</td><td>wa</td><td>等待输入输出的CPU时间百分比</td></tr></tbody></table><h3 id="Mem"><a href="#Mem" class="headerlink" title="Mem"></a>Mem</h3><table><thead><tr><th>key</th><th>value</th><th>Desc</th></tr></thead><tbody><tr><td> 191272k</td><td>total</td><td>物理内存总量</td></tr><tr><td>173656k</td><td>used</td><td>使用的物理内存总量</td></tr><tr><td>17616k</td><td>free</td><td>空闲内存总量</td></tr><tr><td>22052k</td><td>buffers</td><td>用作内核缓存的内存量</td></tr></tbody></table><h3 id="Swap"><a href="#Swap" class="headerlink" title="Swap"></a>Swap</h3><table><thead><tr><th>key</th><th>value</th><th>Desc</th></tr></thead><tbody><tr><td> 192772k</td><td>total</td><td>交换区总量</td></tr><tr><td>0k</td><td>used</td><td>使用的交换区总量</td></tr><tr><td>192772k</td><td>free</td><td>空闲交换区总量</td></tr><tr><td>123988k</td><td>cached</td><td>缓冲的交换区总量。</td></tr></tbody></table><h3 id="详细信息"><a href="#详细信息" class="headerlink" title="详细信息"></a>详细信息</h3><table><thead><tr><th>Key</th><th>Desc</th></tr></thead><tbody><tr><td>PID</td><td>进程id</td></tr><tr><td>PPID</td><td>父进程id</td></tr><tr><td>RUSER</td><td>Real user name</td></tr><tr><td>UID</td><td>进程所有者的用户id</td></tr><tr><td>USER</td><td>进程所有者的用户名</td></tr><tr><td>GROUP</td><td>进程所有者的组名</td></tr><tr><td>TTY</td><td>启动进程的终端名。不是从终端启动的进程则显示为 ?</td></tr><tr><td>PR</td><td>优先级</td></tr><tr><td>NI</td><td>nice值。负值表示高优先级，正值表示低优先级</td></tr><tr><td>P</td><td>最后使用的CPU，仅在多CPU环境下有意义</td></tr><tr><td>%CPU</td><td>上次更新到现在的CPU时间占用百分比</td></tr><tr><td>TIME</td><td>进程使用的CPU时间总计，单位秒</td></tr><tr><td>TIME+</td><td>进程使用的CPU时间总计，单位1/100秒</td></tr><tr><td>%MEM</td><td>进程使用的物理内存百分比</td></tr><tr><td>VIRT</td><td>进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES</td></tr><tr><td>SWAP</td><td>进程使用的虚拟内存中，被换出的大小，单位kb。</td></tr><tr><td>RES</td><td>进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA</td></tr><tr><td>CODE</td><td>可执行代码占用的物理内存大小，单位kb</td></tr><tr><td>DATA</td><td>可执行代码以外的部分(数据段+栈)占用的物理内存大小，单位kb</td></tr><tr><td>SHR</td><td>共享内存大小，单位kb</td></tr><tr><td>nFLT</td><td>页面错误次数</td></tr><tr><td>nDRT</td><td>最后一次写入到现在，被修改过的页面数。</td></tr><tr><td>S</td><td>进程状态。</td></tr><tr><td>  S</td><td>D=不可中断的睡眠状态</td></tr><tr><td>  S</td><td>R=运行</td></tr><tr><td>  S</td><td>S=睡眠</td></tr><tr><td>   S</td><td>T=跟踪/停止</td></tr><tr><td>  S</td><td>Z=僵尸进程</td></tr><tr><td>COMMAND</td><td>命令名/命令行</td></tr><tr><td>WCHAN</td><td>若该进程在睡眠，则显示睡眠中的系统函数名</td></tr><tr><td>Flags</td><td>任务标志，参考 sched.h</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;uptime-top&quot;&gt;&lt;a href=&quot;#uptime-top&quot; class=&quot;headerlink&quot; title=&quot;uptime / top&quot;&gt;&lt;/a&gt;uptime / top&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://raw.githubuserco
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Redis Info命令详解</title>
    <link href="http://yoursite.com/2018/11/29/Redis-Info%E5%91%BD%E4%BB%A4%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2018/11/29/Redis-Info命令详解/</id>
    <published>2018-11-29T09:15:08.000Z</published>
    <updated>2019-02-22T04:08:12.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Redis-内存使用率"><a href="#Redis-内存使用率" class="headerlink" title="Redis  内存使用率"></a>Redis  内存使用率</h2><h2 id="Memory"><a href="#Memory" class="headerlink" title="Memory"></a>Memory</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info memory  //Redis命令</span><br></pre></td></tr></table></figure><table><thead><tr><th>Field</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>used_memory</td><td>3228479928</td><td></td></tr><tr><td>used_memory_human</td><td>3.01G</td><td>redis已经使用内存</td></tr><tr><td>used_memory_rss</td><td>5631479808</td><td></td></tr><tr><td>used_memory_rss_human</td><td>5.24G</td><td>从操作系统的角度，返回 Redis 已分配的内存总量(俗称常驻集大小)</td></tr><tr><td>used_memory_peak</td><td>10753524688</td><td></td></tr><tr><td>used_memory_peak_human</td><td>10.02G</td><td>曾经占用内存的峰值</td></tr><tr><td>used_memory_peak_perc</td><td>30.02%</td><td>(used_memory/ used_memory_peak) *100%</td></tr><tr><td>used_memory_overhead</td><td>207532802</td><td>Redis为了维护数据集的内部机制所需的内存开销</td></tr><tr><td>used_memory_startup</td><td>6144240</td><td>Redis服务器启动时消耗的内存</td></tr><tr><td>used_memory_dataset</td><td>3020947126</td><td>used_memory—used_memory_overhead</td></tr><tr><td>used_memory_dataset_perc</td><td>93.75%</td><td>100%*(used_memory_dataset/(used_memory—used_memory_startup))</td></tr><tr><td>total_system_memory</td><td>33738252288</td><td></td></tr><tr><td>total_system_memory_human</td><td>31.42G</td><td>服务器本身的内存大小  </td></tr><tr><td>used_memory_lua</td><td>51200</td><td></td></tr><tr><td>used_memory_lua_human</td><td>50.00K</td><td>Lua 引擎所使用的内存大小</td></tr><tr><td>maxmemory</td><td>10737418240</td><td></td></tr><tr><td>maxmemory_human</td><td>10.00G</td><td>服务器设定的redis可以使用的最大内存</td></tr><tr><td>maxmemory_policy</td><td>noeviction</td><td>当达到maxmemory时的淘汰策略</td></tr><tr><td>mem_fragmentation_ratio</td><td>1.74</td><td>碎片率意味着74%的内存浪费</td></tr><tr><td>mem_allocator</td><td>jemalloc-4.0.3</td><td>内存分配器</td></tr><tr><td>active_defrag_running</td><td>0</td><td></td></tr><tr><td>lazyfree_pending_objects</td><td>0</td><td></td></tr></tbody></table><h3 id="maxmemory-policy-选择策略"><a href="#maxmemory-policy-选择策略" class="headerlink" title="maxmemory_policy 选择策略"></a>maxmemory_policy 选择策略</h3><table><thead><tr><th>Fields</th><th>Description</th></tr></thead><tbody><tr><td>noeviction</td><td>默认策略，不淘汰，如果内存已满，添加数据是报错。</td></tr><tr><td>allkeys-lru</td><td>在所有键中，选取最近最少使用的数据抛弃。</td></tr><tr><td>volatile-lru</td><td>在设置了过期时间的所有键中，选取最近最少使用的数据抛弃。</td></tr><tr><td>allkeys-random</td><td>在所有键中，随机抛弃</td></tr><tr><td>volatile-random</td><td>在设置了过期时间的所有键，随机抛弃</td></tr><tr><td>volatile-ttl</td><td>在设置了过期时间的所有键，抛弃存活时间最短的数据</td></tr></tbody></table><hr><h2 id="Server"><a href="#Server" class="headerlink" title="Server"></a>Server</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info server  //Redis 命令</span><br></pre></td></tr></table></figure><table><thead><tr><th>Fiels</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>redis_version</td><td>4.0.9</td><td>Redis 服务器版本</td></tr><tr><td>redis_git_sha1</td><td>00000000</td><td></td></tr><tr><td>redis_git_dirty</td><td>0</td><td></td></tr><tr><td>redis_build_id</td><td>1981f57149260a90</td><td></td></tr><tr><td>redis_mode</td><td>standalone</td><td>运行模式，单机或者集群</td></tr><tr><td>os</td><td>Linux 4.4.0-105-generic x86_64</td><td>Redis 服务器的宿主操作系统</td></tr><tr><td>arch_bits</td><td>64</td><td>架构（32 或 64 位）</td></tr><tr><td>multiplexing_api</td><td>epoll</td><td>Redis 所使用的事件处理机制</td></tr><tr><td>atomicvar_api</td><td>atomic-builtin</td><td>原子处理api</td></tr><tr><td>gcc_version</td><td>5.4.0</td><td>编译 Redis 时所使用的 GCC 版本</td></tr><tr><td>process_id</td><td>8004</td><td>服务器进程的 PID</td></tr><tr><td>run_id</td><td>6a5182bea61558be39d072ab5fd14579f12fc271</td><td>Redis 服务器的随机标识符（用于 Sentinel 和集群）</td></tr><tr><td>tcp_port</td><td>6379</td><td>监听端口</td></tr><tr><td>uptime_in_seconds</td><td>1406431</td><td>自 Redis 服务器启动以来，经过的秒数</td></tr><tr><td>uptime_in_days</td><td>16</td><td>自 Redis 服务器启动以来，经过的天数</td></tr><tr><td>hz</td><td>10</td><td></td></tr><tr><td>lru_clock</td><td>16752391</td><td>以分钟为单位进行自增的时钟，用于 LRU 管理</td></tr><tr><td>executable</td><td>/home/lianxiang/redis/redis-4.0.9/src/redis-server</td><td>执行文件地址</td></tr><tr><td>config_file</td><td>/home/redis/redis.conf</td><td>配置文件地址</td></tr></tbody></table><hr><h2 id="Clients"><a href="#Clients" class="headerlink" title="Clients"></a>Clients</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info clients  //Redis 命令</span><br></pre></td></tr></table></figure><table><thead><tr><th>Fiels</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>connected_clients</td><td>11721</td><td>已连接客户端的数量（不包括通过从属服务器连接的客户端）</td></tr><tr><td>client_longest_output_list</td><td>0</td><td>当前连接的客户端当中，最长的输出列表</td></tr><tr><td>client_biggest_input_buf</td><td>18</td><td>当前连接的客户端当中，最大输入缓存</td></tr><tr><td>blocked_clients</td><td>0</td><td>正在等待阻塞命令（BLPOP、BRPOP、BRPOPLPUSH）的客户端的数量</td></tr></tbody></table><hr><h2 id="Commandstats"><a href="#Commandstats" class="headerlink" title="Commandstats"></a>Commandstats</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">info commandstats  //Redis 命令</span><br></pre></td></tr></table></figure><table><thead><tr><th>Fiels</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>cmdstat_cluster</td><td>calls=77,usec=117,usec_per_call=1.52</td><td>使用次数/总时间(微秒数)/平均时间</td></tr><tr><td>cmdstat_zremrangebyscore</td><td>calls=402280989,usec=3007286205,usec_per_call=7.48</td><td>…</td></tr><tr><td>cmdstat_script</td><td>calls=31,usec=533,usec_per_call=17.19</td><td>…</td></tr><tr><td>cmdstat_evalsha</td><td>calls=58716,usec=7416675,usec_per_call=126.31</td><td>…</td></tr><tr><td>cmdstat_smembers</td><td>calls=1031965,usec=25706632,usec_per_call=24.91</td><td>…</td></tr><tr><td>cmdstat_sscan</td><td>calls=15,usec=1026,usec_per_call=68.40</td><td>…</td></tr><tr><td>cmdstat_hkeys</td><td>calls=294,usec=211364,usec_per_call=718.93</td><td>…</td></tr><tr><td>cmdstat_expire</td><td>calls=124221201,usec=292783944,usec_per_call=2.36</td><td>…</td></tr><tr><td>cmdstat_zrangebyscore</td><td>calls=37214253,usec=358725386,usec_per_call=9.64</td><td>…</td></tr><tr><td>cmdstat_hmget</td><td>calls=7,usec=38,usec_per_call=5.43</td><td>…</td></tr><tr><td>cmdstat_zrevrange</td><td>calls=9772,usec=98592,usec_per_call=10.09</td><td>…</td></tr><tr><td>cmdstat_hget</td><td>calls=21564966,usec=41137042,usec_per_call=1.91</td><td>…</td></tr><tr><td>cmdstat_scan</td><td>calls=47381,usec=26088568,usec_per_call=550.61</td><td>…</td></tr><tr><td>…</td><td>…</td><td>…</td></tr></tbody></table><h2 id="慢查询日志"><a href="#慢查询日志" class="headerlink" title="慢查询日志"></a>慢查询日志</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SlowLog Get 1  //获取一条</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SlowLog Len //慢日志数量</span><br></pre></td></tr></table></figure><table><thead><tr><th>Fiels</th><th>Value</th><th>Description</th></tr></thead><tbody><tr><td>   1)</td><td>“67227”</td><td>唯一性(unique)的日志标识符</td></tr><tr><td>   2)</td><td>“1543481885”</td><td>被记录命令的执行时间点，以 UNIX 时间戳格式表示</td></tr><tr><td>   3)</td><td>“10104”</td><td>查询执行时间，以微秒为单位</td></tr><tr><td>   4.1)</td><td>“ZADD”</td><td>执行的命令</td></tr><tr><td>   4.2)</td><td>PAIR_MARKET_DEPTH_SELL:4:3115”</td><td>完整的命令</td></tr><tr><td>   4.3)</td><td>“0.02638215”</td><td>参数 </td></tr><tr><td>   4.4)</td><td>“[0.026382150000000000,101.470000000000000000]”</td><td>参数</td></tr><tr><td>   4.5)</td><td>“47.91.198.244:43484”</td><td>IP+端口</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Redis-内存使用率&quot;&gt;&lt;a href=&quot;#Redis-内存使用率&quot; class=&quot;headerlink&quot; title=&quot;Redis  内存使用率&quot;&gt;&lt;/a&gt;Redis  内存使用率&lt;/h2&gt;&lt;h2 id=&quot;Memory&quot;&gt;&lt;a href=&quot;#Memory&quot; c
      
    
    </summary>
    
      <category term="Redis" scheme="http://yoursite.com/categories/Redis/"/>
    
    
      <category term="Redis" scheme="http://yoursite.com/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>Linux</title>
    <link href="http://yoursite.com/2018/11/29/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/11/29/Linux常用命令/</id>
    <published>2018-11-29T06:42:18.000Z</published>
    <updated>2019-06-04T08:34:55.398Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux-命令"><a href="#Linux-命令" class="headerlink" title="Linux 命令"></a>Linux 命令</h2><h4 id="查看公网IP"><a href="#查看公网IP" class="headerlink" title="查看公网IP"></a>查看公网IP</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl cip.cc</span><br><span class="line"></span><br><span class="line">curl http://ifconfig.me</span><br></pre></td></tr></table></figure><h4 id="grep-查询-筛选"><a href="#grep-查询-筛选" class="headerlink" title="grep(查询 筛选)"></a>grep(查询 筛选)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-A,-B,-C //分别可以显示匹配行的后,前,后前多少行内容</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&apos;2016-04-13 11:26:00&apos; //关键词,注意是单引号包裹</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">catalina.out //检索的文件 可以是目录</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more // 以分页的形式</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -C 10 &apos;连接池异常&apos; catalina.out   //查找某字段的前后多少行</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -500f catalina.out |grep &apos;连接池异常&apos; //查询tomcat 末尾指定行数的过滤日志</span><br></pre></td></tr></table></figure><h4 id="find-查找文件"><a href="#find-查找文件" class="headerlink" title="find(查找文件)"></a>find(查找文件)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">find / -name  *sync-huobi*</span><br><span class="line">   </span><br><span class="line">find / -name filename.txt //根据名称查找/目录下的filename.txt文件。</span><br><span class="line"></span><br><span class="line">find . -name &quot;*.xml&quot; //递归查找所有的xml文件</span><br><span class="line"></span><br><span class="line">find . -name &quot;*&quot; |xargs grep &quot;hello&quot; //递归查找所有文件内容中包含hello world的xml文件</span><br></pre></td></tr></table></figure><h4 id="grep-搜索"><a href="#grep-搜索" class="headerlink" title="grep(搜索)"></a>grep(搜索)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">grep -H &apos;spring&apos; *.xml //查找所以有的包含spring的xml文件</span><br><span class="line"></span><br><span class="line">find ./ -size 0 | xargs rm -f &amp; //删除文件大小为零的文件</span><br><span class="line"></span><br><span class="line">ls -l | grep &apos;.jar&apos; //查找当前目录中的所有jar文件</span><br><span class="line"></span><br><span class="line">grep &apos;test&apos; d* //显示所有以d开头的文件中包含test的行</span><br><span class="line"></span><br><span class="line">grep &apos;test&apos; aa bb cc //显示在aa，bb，cc文件中匹配test的行</span><br><span class="line"></span><br><span class="line">grep &apos;[a-z]\&#123;5\&#125;&apos; aa //显示所有包含每个字符串至少有5个连续小写字符的字符串的行</span><br></pre></td></tr></table></figure><h4 id="ps-查看一个程序是否运行"><a href="#ps-查看一个程序是否运行" class="headerlink" title="ps (查看一个程序是否运行)"></a>ps (查看一个程序是否运行)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ps –ef|grep tomcat //查看所有有关tomcat的进程</span><br><span class="line"></span><br><span class="line">ps -ef|grep --color java //高亮要查询的关键字</span><br><span class="line"></span><br><span class="line">kill -9 19979 //终止线程号位19979的进程</span><br></pre></td></tr></table></figure><h4 id="ls-查看文件，包含隐藏文件"><a href="#ls-查看文件，包含隐藏文件" class="headerlink" title="ls (查看文件，包含隐藏文件)"></a>ls (查看文件，包含隐藏文件)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ls -al //当前工作目录</span><br><span class="line"></span><br><span class="line">pwd   //复制文件</span><br><span class="line"></span><br><span class="line">cp source dest //复制文件</span><br><span class="line"></span><br><span class="line">cp -r sourceFolder targetFolder //递归复制整个文件夹</span><br></pre></td></tr></table></figure><h4 id="mkdir-创建目录件"><a href="#mkdir-创建目录件" class="headerlink" title="mkdir (创建目录件)"></a>mkdir (创建目录件)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkdir newfolder //删除目录</span><br><span class="line"></span><br><span class="line">rmdir deleteEmptyFolder //删除空目录 </span><br><span class="line"></span><br><span class="line">rm -rf deleteFile //递归删除目录中所有内容</span><br><span class="line"></span><br><span class="line">mv /temp/movefile /targetFolder //移动文件</span><br><span class="line"></span><br><span class="line">mv oldNameFile newNameFile  //重命名</span><br></pre></td></tr></table></figure><h4 id="切换用户"><a href="#切换用户" class="headerlink" title="切换用户"></a>切换用户</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">su -username</span><br><span class="line"></span><br><span class="line">sudo rm a.txt 使用管理员身份删除文件</span><br></pre></td></tr></table></figure><h4 id="修改文件权限"><a href="#修改文件权限" class="headerlink" title="修改文件权限"></a>修改文件权限</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 file.java file.java的权限-rwxrwxrwx，r表示读、w表示写、x表示可执行</span><br></pre></td></tr></table></figure><h4 id="压缩文件"><a href="#压缩文件" class="headerlink" title="压缩文件"></a>压缩文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">tar -czf test.tar.gz /test1 /test2   //列出压缩文件列表</span><br><span class="line"></span><br><span class="line">tar -tzf test.tar.gz               //解压文件</span><br><span class="line"></span><br><span class="line">tar -xvzf test.tar.gz            //解压文件</span><br><span class="line"></span><br><span class="line">head -n 10 example.txt        //查看文件前10行</span><br><span class="line"></span><br><span class="line">tail -n 10 example.txt      //查看文件后10行 </span><br><span class="line"></span><br><span class="line">tail -f exmaple.log        //查看日志最近更新</span><br><span class="line"></span><br><span class="line">netstat -tln | grep 8080 查看端口8080的使用情况  //查看端口占用情况</span><br><span class="line"></span><br><span class="line">lsof -i :8080  //查看端口属于哪个进程</span><br></pre></td></tr></table></figure><h4 id="ps-查看进程"><a href="#ps-查看进程" class="headerlink" title="ps(查看进程)"></a>ps(查看进程)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ps aux|grep java           //查看java进程</span><br><span class="line"></span><br><span class="line">ps aux                    //查看所有进程</span><br><span class="line"></span><br><span class="line">tree a                   //以树状格式列出目录</span><br><span class="line"></span><br><span class="line">wget http://file.tgz     //文件下载</span><br><span class="line"> </span><br><span class="line">curl http://file.tgz    //请求URL</span><br><span class="line"></span><br><span class="line">ping www.just-ping.com  //网络检测</span><br></pre></td></tr></table></figure><h4 id="Redis-查看大Key"><a href="#Redis-查看大Key" class="headerlink" title="Redis (查看大Key)"></a>Redis (查看大Key)</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -h IP -p 6379 -a password --bigkeys</span><br></pre></td></tr></table></figure><h4 id="启动SpringBoot-Jar"><a href="#启动SpringBoot-Jar" class="headerlink" title="启动SpringBoot  Jar"></a>启动SpringBoot  Jar</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">nohup java -jar exchange-announcement-0.0.1-SNAPSHOT.jar &amp; //后台启动一个Jar包</span><br><span class="line"> </span><br><span class="line"> tail -500f nohup.out //查看日志</span><br><span class="line"> </span><br><span class="line"> ps -ef|grep exchange-announcement-0.0.1-SNAPSHOT.jar //查看进程ID</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux-命令&quot;&gt;&lt;a href=&quot;#Linux-命令&quot; class=&quot;headerlink&quot; title=&quot;Linux 命令&quot;&gt;&lt;/a&gt;Linux 命令&lt;/h2&gt;&lt;h4 id=&quot;查看公网IP&quot;&gt;&lt;a href=&quot;#查看公网IP&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="Linux" scheme="http://yoursite.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="Redis" scheme="http://yoursite.com/tags/Redis/"/>
    
      <category term="SpingBoot" scheme="http://yoursite.com/tags/SpingBoot/"/>
    
  </entry>
  
</feed>
